buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "com.github.jruby-gradle:jruby-gradle-plugin:1.3.3"
    }
}

// Adds 'assemble', 'check', 'build', and 'clean' tasks.
// See: https://docs.gradle.org/current/userguide/standard_plugins.html#sec:base_plugins
apply plugin: 'base'

apply plugin: 'com.github.jruby-gradle.base'

dependencies {
    jrubyExec 'rubygems:jekyll:3.4.0'
    // Without this, we get: LoadError: no such file to load -- bundler
    jrubyExec 'rubygems:bundler:1.14.4'
}

ext {
    source = file("src/main/jekyll/").absolutePath
    destination = file("build/_site").absolutePath
    
    commonFlags = [ '--source', source, '--destination', destination ]
}

import com.github.jrubygradle.JRubyExec

task jekyllBuild(type: JRubyExec, group: 'Jekyll', description: 'Build your site.') {
    // Enable task to be UP-TO-DATE.
    inputs.file source
    outputs.file destination
    
    script "jekyll"
    
    scriptArgs "build"
    scriptArgs commonFlags
    
    // Consider enabling this to help us determine when pages need to be pushed to Nexus.
    // A copy of .jekyll-metadata could be stored in the repo and then compared to the local file.
    // See https://jekyllrb.com/docs/configuration/#incremental-regeneration
    // scriptArgs "--incremental"
}

tasks.assemble.dependsOn tasks.jekyllBuild

task jekyllServe(type: JRubyExec, group: 'Jekyll', description: 'Serve your site locally.') {
    // This task starts a server; it is never considered UP-TO-DATE.
    outputs.upToDateWhen { false }
    
    script "jekyll"
    
    scriptArgs "serve"
    scriptArgs commonFlags
}
